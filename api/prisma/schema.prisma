// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id() @default(autoincrement())
  name     String
  level    String // admin, employee
  username String
  password String
  status   String @default("use") // use, delete
}

model FoodType {
  id        Int        @id() @default(autoincrement())
  name      String
  remark    String?
  status    String     @default("use") // use, delete
  FoodSizes FoodSize[]
  Tastes    Taste[]
  Foods     Food[]
}

model FoodSize {
  id              Int              @id() @default(autoincrement())
  name            String
  remark          String?
  moneyAdded      Int              @default(0)
  status          String           @default("use") // use, delete
  foodTypeId      Int
  FoodType        FoodType         @relation(fields: [foodTypeId], references: [id])
  SaleTempDetails SaleTempDetail[]
}

model Taste {
  id              Int              @id() @default(autoincrement())
  name            String
  remark          String?
  status          String           @default("use") // use, delete
  foodTypeId      Int
  FoodType        FoodType         @relation(fields: [foodTypeId], references: [id])
  SaleTempDetails SaleTempDetail[]
}

model Food {
  id         Int        @id() @default(autoincrement())
  name       String
  remark     String?
  price      Int
  img        String?
  status     String     @default("use") // use, delete
  foodType   String     @default("food") // food, drink
  foodTypeId Int
  FoodType   FoodType   @relation(fields: [foodTypeId], references: [id])
  SaleTemps  SaleTemp[]
}

model SaleTemp {
  id              Int              @id() @default(autoincrement())
  foodId          Int
  qty             Int
  price           Int
  tableNo         Int
  userId          Int
  Food            Food             @relation(fields: [foodId], references: [id])
  SaleTempDetails SaleTempDetail[]
}

model SaleTempDetail {
  id         Int       @id() @default(autoincrement())
  saleTempId Int
  SaleTemp   SaleTemp  @relation(fields: [saleTempId], references: [id])
  addedMoney Int?
  tasteId    Int?
  Taste      Taste?    @relation(fields: [tasteId], references: [id])
  foodSizeId Int?
  FoodSize   FoodSize? @relation(fields: [foodSizeId], references: [id])
}
